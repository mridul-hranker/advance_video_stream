group 'com.example.advance_video_stream'
version '0.1'

buildscript {
    ext.kotlin_version = '1.9.22'
    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()
        maven { url 'https://jitpack.io' }
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:8.1.4'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
//        classpath 'com.android.tools:r8:8.3.37'
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
        maven { url 'https://jitpack.io' }
    }
}

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

android {
    if (project.android.hasProperty("namespace")) {
        namespace 'com.example.advance_video_stream'
    }

    compileSdk 34

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
    }

    defaultConfig {
        minSdkVersion 21
    }

    buildTypes {
        release {
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
        }
    }

    dependencies {
        def exoplayer_version = "1.3.1"
        def retrofit_version = "2.11.0"
        def coroutine_version = '1.7.0'

        implementation "androidx.media3:media3-exoplayer:${exoplayer_version}"
        implementation "androidx.media3:media3-exoplayer-dash:${exoplayer_version}"
        implementation "androidx.media3:media3-exoplayer-hls:${exoplayer_version}"
        implementation "androidx.media3:media3-ui:${exoplayer_version}"
        implementation "androidx.media3:media3-exoplayer-smoothstreaming:$exoplayer_version"
        implementation "androidx.media3:media3-datasource-cronet:$exoplayer_version"

        //NewPipe
        implementation "com.github.TeamNewPipe:NewPipeExtractor:v0.24.0"

        //Retrofit
        implementation "com.squareup.retrofit2:retrofit:${retrofit_version}"
        implementation "com.squareup.retrofit2:converter-gson:${retrofit_version}"
        implementation 'com.squareup.okhttp3:logging-interceptor:4.12.0'

        //Cronet
        // Using lower version because new version is throwing error
        implementation 'org.chromium.net:cronet-embedded:113.5672.61'
//        implementation 'org.chromium.net:cronet-embedded:119.6045.31'
        implementation 'com.google.net.cronet:cronet-okhttp:0.1.0'

        //Coroutines
        implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutine_version"
        implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutine_version"

        implementation 'com.google.android.material:material:1.11.0'

        testImplementation 'org.jetbrains.kotlin:kotlin-test'
        testImplementation 'org.mockito:mockito-core:5.0.0'
    }

    testOptions {
        unitTests.all {
            useJUnitPlatform()

            testLogging {
                events "passed", "skipped", "failed", "standardOut", "standardError"
                outputs.upToDateWhen { false }
                showStandardStreams = true
            }
        }
    }
}
